<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Arheologii au descoperit în zonă dovezi ale unor așezări preistorice, datând din neolitic. În antichitate, începând cu secolul al III-lea î.e.n., celții, Boii și ulterior în secolul I, triburile germanice ale marcomanilor și quazilor s-au stabilit aici. În Perioada Migrațiilor, în preajma secolului al V-lea, multe triburi germanice s-au deplasat către vest și sud din Europa Centrală.

Slavii din zona Mării Negre și a Carpaților s-au stabilit, apoi, aici (mișcare ce a fost stimulată și de migrația masivă din Siberia și Europa de Est: hunii, avarii, bulgarii și maghiarii). În secolul al VI-lea, ei s-au deplasat către sud în Boemia, Moravia și, parțial, în Austria de astăzi. Pe parcursul secolului al VII-lea, negustorul franc Samo, susținător al slavilor ce luptau contra stăpânilor lor avari, a devenit conducător al primului stat slav cunoscut din Europa Centrală. Principatul Moraviei a apărut în secolul al VIII-lea și a atins maxima întindere în secolul al IX-lea, când a frânat influența francilor și a câștigat protecția Papei.

Přemysl Ottokar al II-lea, (c. 1233-1278), rege al Boemiei și domnitor al Austriei, Stiriei, Carinthiei și Carniolei
Statul boem sau ceh a apărut pe la sfârșitul secolului al IX-lea, când a fost unificat de dinastia Přemyslidă. Fiind singurul regat din cadrul Sfântului Imperiu Roman, Regatul Boemiei a fost o putere regională importantă în Evul Mediu. El a făcut parte din Imperiu între 1002 și 1806, cu excepția anilor 1440-1526. În 1212, regele Přemysl Otakar I, purtător al titlului de „rege” din 1198, a obținut de la împărat Bula de Aur din Sicilia (edict oficial), prin care se confirma titlul regal pentru Otakar și pentru descendenții săi, iar Ducatul Boemiei a fost ridicat la rang de regat. Imigrația germană a avut loc în zonele periferice boeme în secolul al XIII-lea. Germanii au populat orașe și districte miniere și, în unele cazuri, au împins coloniile germane înspre interiorul zonelor cehești. În 1235, puternica armată mongolă a lansat o invazie a Europei. După bătălia de la Legnica, mongolii au înaintat în Moravia, dar au fost învinși de către regele boem într-o bătălie la Olomouc și s-au îndreptat apoi spre Ungaria.
</value>
  </data>
</root>